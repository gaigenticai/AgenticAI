apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingestion-coordinator
  namespace: agentic-platform
  labels:
    app: ingestion-coordinator
    component: data-ingestion
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ingestion-coordinator
  template:
    metadata:
      labels:
        app: ingestion-coordinator
        component: data-ingestion
    spec:
      containers:
      - name: ingestion-coordinator
        image: agentic-platform/ingestion-coordinator:latest
        ports:
        - containerPort: 8080
          name: http
        envFrom:
        - configMapRef:
            name: agentic-platform-config
        - secretRef:
            name: agentic-platform-secrets
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-lake-minio
  namespace: agentic-platform
  labels:
    app: data-lake-minio
    component: data-lake
spec:
  replicas: 2
  selector:
    matchLabels:
      app: data-lake-minio
  template:
    metadata:
      labels:
        app: data-lake-minio
        component: data-lake
    spec:
      containers:
      - name: data-lake-minio
        image: agentic-platform/data-lake-minio:latest
        ports:
        - containerPort: 8090
          name: http
        envFrom:
        - configMapRef:
            name: agentic-platform-config
        - secretRef:
            name: agentic-platform-secrets
        volumeMounts:
        - name: backup-storage
          mountPath: /backups
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8090
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8090
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: backup-storage
        persistentVolumeClaim:
          claimName: backup-storage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oauth2-oidc
  namespace: agentic-platform
  labels:
    app: oauth2-oidc
    component: authentication
spec:
  replicas: 2
  selector:
    matchLabels:
      app: oauth2-oidc
  template:
    metadata:
      labels:
        app: oauth2-oidc
        component: authentication
    spec:
      containers:
      - name: oauth2-oidc
        image: agentic-platform/oauth2-oidc:latest
        ports:
        - containerPort: 8093
          name: http
        envFrom:
        - configMapRef:
            name: agentic-platform-config
        - secretRef:
            name: agentic-platform-secrets
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8093
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8093
          initialDelaySeconds: 10
          periodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: monitoring
  namespace: agentic-platform
  labels:
    app: monitoring
    component: observability
spec:
  replicas: 1
  selector:
    matchLabels:
      app: monitoring
  template:
    metadata:
      labels:
        app: monitoring
        component: observability
    spec:
      containers:
      - name: monitoring
        image: agentic-platform/monitoring:latest
        ports:
        - containerPort: 8095
          name: http
        envFrom:
        - configMapRef:
            name: agentic-platform-config
        - secretRef:
            name: agentic-platform-secrets
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8095
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8095
          initialDelaySeconds: 10
          periodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: graphql-api
  namespace: agentic-platform
  labels:
    app: graphql-api
    component: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: graphql-api
  template:
    metadata:
      labels:
        app: graphql-api
        component: api
    spec:
      containers:
      - name: graphql-api
        image: agentic-platform/graphql-api:latest
        ports:
        - containerPort: 8100
          name: http
        envFrom:
        - configMapRef:
            name: agentic-platform-config
        - secretRef:
            name: agentic-platform-secrets
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8100
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8100
          initialDelaySeconds: 10
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: ingestion-coordinator
  namespace: agentic-platform
  labels:
    app: ingestion-coordinator
spec:
  selector:
    app: ingestion-coordinator
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: data-lake-minio
  namespace: agentic-platform
  labels:
    app: data-lake-minio
spec:
  selector:
    app: data-lake-minio
  ports:
  - port: 8090
    targetPort: 8090
    name: http
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: oauth2-oidc
  namespace: agentic-platform
  labels:
    app: oauth2-oidc
spec:
  selector:
    app: oauth2-oidc
  ports:
  - port: 8093
    targetPort: 8093
    name: http
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: monitoring
  namespace: agentic-platform
  labels:
    app: monitoring
spec:
  selector:
    app: monitoring
  ports:
  - port: 8095
    targetPort: 8095
    name: http
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: graphql-api
  namespace: agentic-platform
  labels:
    app: graphql-api
spec:
  selector:
    app: graphql-api
  ports:
  - port: 8100
    targetPort: 8100
    name: http
  type: ClusterIP
